# .NET Core Function App to Windows on Azure
# Build a .NET Core function app and deploy it to Azure as a Windows function App.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'a3108991-8538-4228-ad58-1b9ed45653af'

  # Function app name
  functionAppName: 'vipinfunctionapp'

  # Agent VM image name
  #storage
  storage: 'demostorageacnt'

  #container
  ContainerName: '$web'

  # Agent VM image name
  vmImageName: 'windows-latest'

  # Working Directory for function app
  functionAppworkingDirectory: '$(System.DefaultWorkingDirectory)/FunctionApp1'

  # Working Directory for Angular
  angularWorkingDirectory: '$(System.DefaultWorkingDirectory)/AzureWeb'

stages:
- stage: __default
  jobs:
  - job: Job
    pool:
      vmImage: windows-latest
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: 10.x
      displayName: Install Node.js
    - task: CmdLine@2
      displayName: npm install -g @angular/cli
      inputs:
        script: >
          npm install -g @angular/cli
    - task: CmdLine@2
      displayName: npm install
      inputs:
        script: >
          npm install
        workingDirectory: $(angularWorkingDirectory)
    - task: CmdLine@2
      displayName: ng build --prod
      inputs:
        script: >
          ng build --prod
        workingDirectory: $(angularWorkingDirectory)
    - task: CmdLine@2
      displayName: list cwd contents (verify build)
      inputs:
        script: >
          dir
        workingDirectory: $(angularWorkingDirectory)
    - task: AzureFileCopy@3
      inputs:
        SourcePath: $(angularWorkingDirectory)/dist
        azureSubscription: $(azureSubscription)
        Destination: AzureBlob
        storage: $(storage)
        ContainerName: $(ContainerName)
        cleanTargetBeforeCopy: true